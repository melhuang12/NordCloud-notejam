---
# Cloudformation template for ec2 instances on app tier in an ASG group
AWSTemplateFormatVersion: "2010-09-09"
Description: This template deploys notejam's app/db/presentation tier

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: notejam

  SSHKey:
    Description: SSH keypair used when launching ec2 instances
    Type: String
    Default: notejam

  InstanceType:
    Description: Type of EC2 instance launched
    Type: String
    Default: t2.micro

  AmiType:
    Description: AMI image type on ca-central-1, default to Amazon Linux
    Type: String
    Default: ami-054362537f5132ce2

  UserPassword:
    Description: Master User password
    Type: String
    Default: SecretPassword01
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: Only alphanumeric characters allowed

  DBInstanceSize:
    Description: The size of the RDS Size
    Type: String
    Default: small

Resources:
  PresentationELB:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      CrossZone: true
      Subnets:
        - { "Fn::ImportValue": !Sub "${EnvironmentName}-PublicSubnet1" }
        - { "Fn::ImportValue": !Sub "${EnvironmentName}-PublicSubnet2" }
      Listeners:
        - Protocol: HTTP
          InstancePort: 80
          LoadBalancerPort: 80
          InstanceProtocol: HTTP
      HealthCheck:
        HealthyThreshold: 2
        Interval: 30
        Target: "TCP:80"
        Timeout: 5
        UnhealthyThreshold: 3
      SecurityGroups:
        - { "Fn::ImportValue": !Sub "${EnvironmentName}-PresentationELBSG" }

  AppLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          InstallAndRun:
            - install-requirements
            - run-httpd
        install-requirements:
          packages:
            yum:
              git: []
              httpd: []
              mod_wsgi: []
          commands:
            00-yum-update:
              command: "yum -y update"
            01-install-epel:
              command: "amazon-linux-extras install epel"
            02-start-httpd:
              command: "service httpd start"
            03-clone-notejam:
              command: "git clone https://github.com/nordcloud/notejam.git /var/www/html"
            04-install-requirements:
              command: "pip install -r /var/www/html/flask/requirements.txt"
            05-create-database-schema:
              command: "python db.py"
              cwd: "/var/www/html/flask/"
            06-restart-httpd:
              command: "service httpd restart"
        run-httpd:
          files:
            /var/www/html/flask/wsgi.py:
              source: https://nordcloud-notejam.s3.ca-central-1.amazonaws.com/wsgi.py
              mode: "000755"
              owner: apache
            /etc/httpd/conf/httpd.conf:
              source: https://nordcloud-notejam.s3.ca-central-1.amazonaws.com/httpd.conf
              mode: "000755"
              owner: apache
          commands:
            01-set-owners:
              command: "chown -R apache:apache /var/www/html"
            02-start-httpd:
              command: "service httpd restart"
    Properties:
      SecurityGroups:
        - { "Fn::ImportValue": !Sub "${EnvironmentName}-AppSG" }
      InstanceType: !Ref InstanceType
      ImageId: !Ref AmiType
      KeyName: !Ref SSHKey
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum update -y aws-cfn-bootstrap
            yum install -y python-pip
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource AppLaunchConfiguration --configsets InstallAndRun --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource AppASG --region ${AWS::Region}

  AppASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref AppLaunchConfiguration
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 4
      AvailabilityZones:
        - { "Fn::ImportValue": !Sub "${EnvironmentName}-AvailabilityZone1" }
        - { "Fn::ImportValue": !Sub "${EnvironmentName}-AvailabilityZone2" }
      VPCZoneIdentifier:
        - { "Fn::ImportValue": !Sub "${EnvironmentName}-PrivateSubnet1" }
        - { "Fn::ImportValue": !Sub "${EnvironmentName}-PrivateSubnet2" }
      LoadBalancerNames:
        - !Ref PresentationELB

  ScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      PolicyType: SimpleScaling
      AutoScalingGroupName: !Ref AppASG
      Cooldown: 30
      ScalingAdjustment: 1

  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 1
      Statistic: Average
      Threshold: 10
      AlarmDescription: Alarm if CPU too high or metric disappears indicating instance is down
      Period: 60
      AlarmActions:
      - !Ref ScaleUpPolicy
      Dimensions:
      - Name: AutoScalingGroupName
        Value: !Ref AppASG
      Namespace: AWS/EC2
      ComparisonOperator: GreaterThanThreshold
      MetricName: CPUUtilization

  # DBSubnet:
  #   Type: AWS::RDS::DBSubnetGroup
  #   Properties:
  #     DBSubnetGroupDescription: DB Subnet group, required for the DBInstance to be part of the VPC
  #     SubnetIds:
  #       - { "Fn::ImportValue": !Sub "${EnvironmentName}-PrivateSubnet1" }
  #       - { "Fn::ImportValue": !Sub "${EnvironmentName}-PrivateSubnet2" }
  #     Tags:
  #       - Key: Name
  #         Value: DBSubnetGroupName

  # MyDB:
  #   Type: AWS::RDS::DBInstance
  #   DeletionPolicy: Snapshot
  #   Properties:
  #     DBSubnetGroupName: !Ref DBSubnet
  #     VPCSecurityGroups:
  #       - { "Fn::ImportValue": !Sub "${EnvironmentName}-DataBaseSG" }
  #     AllocatedStorage: '10'
  #     DBInstanceClass: db.t3.small
  #     Engine: MySQL
  #     EngineVersion: 8.0.16
  #     LicenseModel: general-public-license
  #     MasterUsername: master
  #     MasterUserPassword: !Ref UserPassword

Outputs:
  PresentationELB:
    Description: PresentationELB
    Value: !Ref PresentationELB
    Export:
      Name: !Sub ${EnvironmentName}-PresentationELB
